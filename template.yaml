AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Bedrock Chat Application

Globals:
  Function:
    Timeout: 30
    Runtime: python3.9

Resources:
  ChatFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: app.lambda_handler
      Role: !GetAtt ChatFunctionRole.Arn
      Environment:
        Variables:
          AGENT_ID: U24XNO9ZZZ
          REGION: us-east-1
      Events:
        ChatApi:
          Type: Api
          Properties:
            Path: /chat
            Method: post
            RestApiId: !Ref ChatApi
      Timeout: 30
      MemorySize: 256
      Tracing: Active
      AutoPublishAlias: live
      DeploymentPreference:
        Type: Linear10PercentEvery1Minute

  ChatFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BedrockAccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                  - bedrock:InvokeAgent
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  ChatApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: "'POST,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'"
        AllowOrigin: "'*'"
        AllowCredentials: true

Outputs:
  ChatApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ChatApi}.execute-api.${AWS::Region}.amazonaws.com/prod/chat"
